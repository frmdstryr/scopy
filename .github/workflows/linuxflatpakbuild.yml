name: linux-flatpak build

on: [push, pull_request]

env:
  BUILD_HOST: ubuntu-latest
  USERNAME: github-actions

jobs:

  make-flatpak:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Pull the Docker Image
      run: docker pull analogdevices/scopy-build:flatpak

    - name: Run Docker Image
      run: |
            docker run --privileged \
                -v `pwd`:$GITHUB_WORKSPACE:rw \
                -e "GITHUB_WORKSPACE=$GITHUB_WORKSPACE" \
                -e "REPO_URL=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}" \
                -e "BUILD_HOST=${{ env.BUILD_HOST }}" \
                -e "USERNAME=${{ env.USERNAME }}" \
                -e "GITHUB_SERVER_URL=${GITHUB_SERVER_URL}" \
                -e "GITHUB_API_URL=${GITHUB_API_URL}" \
                -e "GITHUB_REPOSITORY_OWNER=${GITHUB_REPOSITORY%/*}" \
                -e "GITHUB_REPOSITORY=${GITHUB_REPOSITORY#*/}" \
                -e "GITHUB_RUN_ID=${GITHUB_RUN_ID}" \
                -e "GITHUB_RUN_NUMBER=${GITHUB_RUN_NUMBER}" \
                -e "GITHUB_JOB=${GITHUB_JOB}" \
                -e "GITHUB_RUN_ID=${GITHUB_RUN_ID}" \
                -e "GITHUB_RUN_NUMBER=${GITHUB_RUN_NUMBER}" \
                -e "RUNNER_ARCH=${RUNNER_ARCH}" \
                analogdevices/scopy-build:flatpak /bin/bash -xe $GITHUB_WORKSPACE/CI/appveyor/inside_flatpak_docker.sh

    - uses: actions/upload-artifact@v2
      with:
        name: Scopy.flatpak
        path: ${{ github.workspace }}/Scopy.flatpak

    - name: Upload master flatpak build to continous prerelease
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      run: |
        DEPLOY_FILE=Scopy-${GITHUB_SHA::7}.flatpak
        ARTIFACT_ARCHIVE=Scopy-flatpak.tar.gz

        cp ${{ github.workspace }}/Scopy.flatpak ${DEPLOY_FILE}
        tar -czvf ${ARTIFACT_ARCHIVE} ${DEPLOY_FILE}

        wget https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz 
        tar xvf ghr_v0.13.0_linux_amd64.tar.gz

        ghr_v0.13.0_linux_amd64/ghr -u ${{ github.repository_owner }} -r scopy -name "Continuous build" -b "Latest succesful master build " -prerelease -debug -replace continous ${ARTIFACT_ARCHIVE}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
